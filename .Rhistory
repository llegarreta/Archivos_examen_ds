fechas<-cbind(fch_apertura,fch_contratacion,fch_viaje)
View(fechas)
ventas[,3:5]<-fechas
#tabla clientes
clientes$fchnac <- as.Date(ymd(clientes$fchnac))
str(clientes)
str(ventas)
#estudio de fechas
maxminfechas<-function(x){
min<-min(x)
max<-max(x)
c(min,max)
}
lapply(ventas[,3:5],maxminfechas)
#fechas mal insertadas sustituidas
str(ventas$fch_contratacion)
tabla_prueba <- separate(ventas, fch_contratacion, c('Anocontr','Mescontr','Diacontr'))
str(tabla_prueba$Anocontr)
tabla_prueba$Anocontr <- as.numeric(tabla_prueba$Anocontr)
tabla_prueba$Anocontr
malanocontr <- tabla_prueba %>% filter(Anocontr<2014)
malanocontr
malanocontr$Anocontr <- malanocontr$fch_apertura
k <- c(5:6)
malanocontr <- malanocontr[,-k]
u <- c(1:3,5,7:19)
malanocontr <- malanocontr[,-u]
tabla <- left_join(ventas, malanocontr, by=c("id"))
# ANALIZAR LOS NA's DEL DATA FRAME -----------------------------------------------------
tabla_na <-as.data.frame(sapply(ventas, function(x) sum(is.na(x))))
colnames(tabla_na)<-'Cantidad de NA'
porcentaje_NA<-(tabla_na$`Cantidad de NA`/dim(ventas)[[1]])*100
tabla_na<-cbind(tabla_na,porcentaje_NA)
tabla_na<-cbind(tabla_na,porcentaje_NA)
tabla_na<-round(tabla_na, digits = 2)
remove(porcentaje_NA)
View(tabla_na)
tabla_na <-as.data.frame(sapply(clientes, function(x) sum(is.na(x))))
colnames(tabla_na)<-'Cantidad de NA'
porcentaje_NA<-(tabla_na$`Cantidad de NA`/dim(clientes)[[1]])*100
tabla_na<-cbind(tabla_na,porcentaje_NA)
tabla_na<-cbind(tabla_na,porcentaje_NA)
tabla_na<-round(tabla_na, digits = 2)
remove(porcentaje_NA)
View(tabla_na)
# Asignar internacional/nacional ------------------------------------------
destinos<-unique(ventas$destino_viaje)
# Asignar internacional/nacional ------------------------------------------
destinos<-unique(ventas$destino_viaje)
destinos<-as.data.frame(destinos)
View(destinos)
write.csv(destinos,'destinos.csv')
unique(destinos)
View(destinos)
library(stringr)
install.packages('stringr')
install.packages("stringr")
str_detect( "MONDRA   ", pattern = "MONDRA[:blank:]{3}")
str_detect( "MONDRA  ", pattern = "MONDRA[:blank:]{0,3}")
x<-c('hola','hola2')
str_view(x, "C{2}")
x<-c('hola','hola2fsdf')
str_view(x, "C{2}")
str_detect(x, "a")
x<-c('hola','hola2fsdf','holagfdgdf','holgfddf')
str_detect(x, "a")
str_count(x, "a")
x<-c('hola','hola2fsdf','holagfdgdf','holgfddf')
str_detect(x, "a")
str_count(x, "o")
str_detect(x, "^h")
x<-c('hola','dsfsa2fsdf','dsfsagfdgdf','holgfddf')
str_detect(x, "^h")
str_count(x, "o")
str_count(x, "o")
str_detect(x, paste0("^\\Q", starts_with, "\\E"))
str_extract_all("1 + 2 = 3", "\\d+")[[1]]
str_detect("1A?za3",pattern="([0-9]|[A-z]|[:punct:]){1,2}")
directorio <- "C:/Users/jiewu/OneDrive/Escritorio/reto 4"
archivo1 <- "Clientes Reto4.csv"
archivo2<-"Ventas Reto4 train.csv"
clientes <- read.csv(file.path(directorio,archivo1),header = TRUE, sep=';',na.strings=c("","NA"))
ventas <- read.csv(file.path(directorio,archivo2),header = TRUE, sep=';')
#eliminamos columnas género y zona fiscal
clientes<-clientes[,-c(3,7)]
ventas$origen_servicio[ventas$origen_servicio=="SIN DESTINO ASOCIADO"]<-NA
#FECHAS
#tabla ventas
fechas<-ventas[,3:5]
fch_apertura<-as.Date(fechas[,1],"%Y-%m-%d")
fch_contratacion<-as.Date(fechas[,2],"%Y-%m-%d")
fch_viaje<-as.Date(fechas[,3],"%Y-%m-%d")
fch_apertura<-as.data.frame(fch_apertura)
fch_contratacion<-as.data.frame(fch_contratacion)
fch_viaje<-as.data.frame(fch_viaje)
fechas<-cbind(fch_apertura,fch_contratacion,fch_viaje)
View(fechas)
View(clientes)
clientes$municipio(str_detect(clientes$municipio, pattern = 'CASTRO([:punct:]|[a-z]|){2,4}'))<-'CASTRO URDIALES'
clientes$municipio(str_detect(clientes$municipio, pattern = 'CASTRO([:punct:]|[a-z]|)'))<-'CASTRO URDIALES'
clientes$destino_viaje = iconv(df1$destino_viaje, to="ASCII//TRANSLIT")
clientes$destino_viaje = iconv(clientes$destino_viaje, to="ASCII//TRANSLIT")
library(stringr)
clientes$destino_viaje = iconv(clientes$destino_viaje, to="ASCII//TRANSLIT")
clientes$municipio = iconv(clientes$destino_viaje, to="ASCII//TRANSLIT")
clientes$municipio = iconv(clientes$municipio, to="ASCII//TRANSLIT")
unique(clientes$municipio)
library(stringr)
clientes$municipio = iconv(clientes$municipio, to="ASCII//TRANSLIT")
unique(clientes$municipio)
str_detect("CASTRO", "CASTRO$")
str_detect(clientes$municipio, "CASTRO$")
str_detect(unique(clientes$municipio), "CASTRO$")
clientes$municipio <- toupper(clientes$municipio)
str_detect(unique(clientes$municipio), "CASTRO$")
clientes$municipio(str_detect(clientes$municipio, pattern = 'CASTRO')) <- 'CASTRO URDIALES'
unique(clientes$municipio)
clientes$municipio(str_detect(clientes$municipio, pattern = 'CASTRO')) <- 'CASTRO'
unique(clientes$municipio)
directorio <- "C:/Users/jiewu/OneDrive/Escritorio/reto 4"
archivo1 <- "Clientes Reto4.csv"
archivo2<-"Ventas Reto4 train.csv"
clientes <- read.csv(file.path(directorio,archivo1),header = TRUE, sep=';',na.strings=c("","NA"))
ventas <- read.csv(file.path(directorio,archivo2),header = TRUE, sep=';')
clientes$municipio <- toupper(clientes$municipio)
clientes$municipio(str_detect(clientes$municipio, pattern = 'LOGRO')) <- 'LOGROÑO'
unique(clientes$municipio)
install.packages('babynames')
library(babynames)
library(dplyr)
word<-c("hello: hola","hola","hallo","kaixo","hello","hola","hallo","kaixo")
word_count<-c(2,133,4,15,12,13,14,15)
work<-c("otello","romeoyjulieta","otello","romeoyjulieta","otello","el rey lear","otello","romeoyjulieta")
library(ggplot2movies)
library(dplyr)
library(tidyr)
library(stringr)
library(tidytext)
library(readr)
shakespeare <- data.frame(word,word_count,work)
grp <- group_by(shakespeare, shakespeare$word)
#Nos agrupa las las obras segun la columna 'word' creando una nueva columna
fin <- summarize(grp, avg = mean(shakespeare$word_count))
shakespeare <- shakespeare %>%
mutate(word = str_to_lower(word)) %>%
group_by(word, work) %>%
summarize(word_count = sum(word_count))
words <- shakespeare %>%
group_by(word) %>%
summarize(n = sum(word_count), works = n_distinct(work)) %>%
arrange(desc(n))
View(words)
word<-c("hello: hola","hola","hallo","kaixo","hello","hola","hallo","kaixo")
word_count<-c(2,133,4,15,12,13,14,15)
work<-c("otello","romeoyjulieta","otello","romeoyjulieta","otello","el rey lear","otello","romeoyjulieta")
shakespeare <- data.frame(word,word_count,work)
grp <- group_by(shakespeare, shakespeare$word)
#Nos agrupa las las obras segun la columna 'word' creando una nueva columna
fin <- summarize(grp, avg = mean(shakespeare$word_count))
shakespeare <- shakespeare %>%
mutate(word = str_to_lower(word)) %>%
group_by(word, work) %>%
summarize(word_count = sum(word_count))
word<-c("hello: hola","hola","hallo","kaixo","hello","hola","hallo","kaixo")
word_count<-c(2,133,4,15,12,13,14,15)
work<-c("otello","romeoyjulieta","otello","romeoyjulieta","otello","el rey lear","otello","romeoyjulieta")
shakespeare <- data.frame(word,word_count,work)
grp <- group_by(shakespeare, shakespeare$word)
#Nos agrupa las las obras segun la columna 'word' creando una nueva columna
fin <- summarize(grp, avg = mean(shakespeare$word_count))
shakespeare <- shakespeare %>%
mutate(word = str_to_lower(word)) %>%
group_by(word, work) %>%
summarize(word_count = sum(word_count))
View(shakespeare)
word<-c("hello: hola","hola","hallo","kaixo","hello","hola","hallo","kaixo")
word_count<-c(2,133,4,15,12,13,14,15)
work<-c("otello","romeoyjulieta","otello","romeoyjulieta","otello","el rey lear","otello","romeoyjulieta")
shakespeare <- data.frame(word,word_count,work)
grp <- group_by(shakespeare, shakespeare$word)
View(shakespeare)
View(shakespeare)
shakespeare2 <- shakespeare %>%
mutate(word = str_to_lower(word)) %>%
group_by(word, work) %>%
summarize(word_count = sum(word_count))
View(shakespeare2)
library(dplyr)
library(movies)
#9
font_string<-"the quick brown fox jumps over the lazy dog"
font_string %>%
str_to_upper()
library(dplyr)
library(movies)
library(stringr)
#9
font_string<-"the quick brown fox jumps over the lazy dog"
font_string %>%
str_to_upper()
font_string %>%
str_split(boundary("word")) %>%
map(str_length)
library(ggplot2moviesmovies)
library(ggplot2movies)
#9
font_string<-"the quick brown fox jumps over the lazy dog"
font_string %>%
str_to_upper()
font_string %>%
str_split(boundary("word")) %>%
map(str_length)
gss_cat$year %>%
factor() %>%
fct_count()
library(ggplot2)
#9
font_string<-"the quick brown fox jumps over the lazy dog"
font_string %>%
str_to_upper()
font_string %>%
str_split(boundary("word")) %>%
map(str_length)
gss_cat$year %>%
factor() %>%
fct_count()
#11
movies %>%
group_by(year) %>%
summarise(n=n(),avg_length=mean(length)) ->
movies_sum
movies %>%
inner_join(movies_sum)
movies %>%
filter(length>=300) ->
long_movies
movies %>%
anti_join(long_movies)
movies %>%
sample_n(1000) %>%
readr::write_csv(.,
paste0("movies",
format(now(), "%Y%m%d%H%M%S"),
".csv"))
library(readr)
#12
who %>%
gather("key","value",-(country:year)) %>%
mutate(key=str_replace(key,"newrel","new_rel")) %>%
separate(key, c("type","measure","genderage")) %>%
separate(genderage,c("gender","age"),sep=1)
head( select(mtcars, 1, 3) )
head( select(mtcars, mpg, disp) )
mpg disp
head( select(mtcars, 1:3) )
head( select(iris, starts_with("Petal")))
head( select(iris, matches(".t.")))
filter(mtcars, cyl == 4 & hp > 100)
library(tidyverse)
#12
who %>%
gather("key","value",-(country:year)) %>%
mutate(key=str_replace(key,"newrel","new_rel")) %>%
separate(key, c("type","measure","genderage")) %>%
separate(genderage,c("gender","age"),sep=1)
population %>%
group_by(year) %>%
mutate(prop=scales::percent(
population / sum(as.numeric(population),
na.rm=TRUE))) %>%
select(year, country, prop) %>%
spread(year, prop)
arrange(mtcars, mpg)
head( rename(iris, petal_length = Petal.Length) )
head( select(iris, petal_length = Petal.Length) )
head( mutate(mtcars, cv = hp * 0.9863) )
by_cyl <- group_by(mtcars, cyl)
summarise(by_cyl, mean(mpg), mean(hp))
mtcars %>%
select(mpg, hp, cyl, wt) %>%
filter(cyl != 4 & wt > 3.000) %>%
group_by(cyl) %>%
summarize(mean(hp), mean(mpg))
movies.Tipo <- gather(movies,TipoPelicula, IndTipoPelicula, 18:24)
head(movies.Tipo)
library(tidyr)
library(ggplot2movies)
library(dplyr)
movies.Tipo <- gather(movies,TipoPelicula, IndTipoPelicula, 18:24)
head(movies.Tipo)
VMTipoPelicula <- movies.Tipo %>%
filter(IndTipoPelicula == 1) %>%
group_by(TipoPelicula) %>%
summarise(length_media = mean(length), rating_media = mean(rating), budget_media = mean(budget/1000000,na.rm = TRUE))
VMTipoPelicula
VMTipoPeliculaYear <- movies.Tipo %>%
filter(IndTipoPelicula == 1) %>%
group_by(TipoPelicula, year) %>%
summarise(length_media = mean(length), rating_media = mean(rating), budget_media = mean(budget/1000000,na.rm = TRUE))
VMTipoPeliculaYear
movies.Tipo <- gather(movies,TipoPelicula, IndTipoPelicula, 18:24)
head(movies.Tipo)
movies %>%
group_by(Action, Animation, Comedy, Drama, Documentary, Romance) %>%
summarise(duracion= mean(length))
library(tidyr)
library(ggplot2movies)
library(dplyr)
peliculas <- gather(movies,TipoPelicula, IndTipoPelicula, 18:24)
head(movies.Tipo)
ejercicio1<-peliculas%>%
filter(IndTipoPelicula==1)%>%
group_by(TipoPelicula)%>%
summarise(durancion=mean(length))
View(ejercicio1)
ejercicio2<-peliculas%>%
filter(IndTipoPelicula==1)%>%
group_by(TipoPelicula, year)%>%
summarise(durancion=mean(length))
View(ejercicio2)
ejercicio2<-peliculas%>%
filter(IndTipoPelicula==1)%>%
group_by(TipoPelicula,year)%>%
summarise(durancion=mean(length))
View(ejercicio2)
View(peliculas)
ejercicio3<-peliculas%>%
filter(IndTipoPelicula==1)%>%
group_by(TipoPelicula)%>%
summarise(presupuesto=mean(budget,na.rm=T))
ejercicio4<-peliculas%>%
filter(IndTipoPelicula==1)%>%
group_by(TipoPelicula,year)%>%
summarise(presupuesto=mean(budget,na.rm=T))
ejercicios5<- peliculas %>%
filter(IndTipoPelicula == 1) %>%
group_by(TipoPelicula) %>%
summarise(mean(budget,na.rm = T))
View(ejercicios5)
setwd('C:/Users/jiewu/OneDrive/Escritorio/Examen_DS/Archivos_examen_ds')
load('muestra42.RData')
dim(muestra42)
View(muestra42)
# Cambiamos los nombres de las columnas -----------------------------------
colnames(muestra42)<-c('nif','nombre','genero')
View(muestra42)
toupper(muestra42$nombre)
unique(muestra42$genero)
View(muestra42)
View(muestra42)
nombre<- '([[:A-Z:]]{6})([[:alpha:]]{1})'
grepl(pattern = nombre, x=muestra42$nif)
grepl(pattern = nombre, x=muestra42$nombre)
nombre<- '([[:A-Z:]]{6}))'
grepl(pattern = nombre, x=muestra42$nombre)
nombre<- '([[:a-zA-Z:]]{6}))'
grepl(pattern = nombre, x=muestra42$nombre)
nombre<- '([[:a-zA-Z:]]{6})'
grepl(pattern = nombre, x=muestra42$nombre)
muestra42 %>%
group_by(genero) %>%
add_count(genero) %>%
mutate(genero = if_else(is.na(genero), genero[which.max(n)], genero)) %>%
select(-n) %>%
ungroup()
library(tidyverse)
muestra42 %>%
group_by(genero) %>%
add_count(genero) %>%
mutate(genero = if_else(is.na(genero), genero[which.max(n)], genero)) %>%
select(-n) %>%
ungroup()
View(muestra42)
muestra42$genero<-as.factor(muestra42$genero)
library(tidyverse)
muestra42 %>%
group_by(genero) %>%
add_count(genero) %>%
mutate(genero = if_else(is.na(genero), genero[which.max(n)], genero)) %>%
select(-n) %>%
ungroup()
muestra42 %>%
group_by(nombre,genero) %>%
add_count(genero) %>%
mutate(genero = if_else(is.na(genero), genero[which.max(n)], genero)) %>%
select(-n) %>%
ungroup()
muestra42 %>%
group_by(genero,nombre) %>%
add_count(genero) %>%
mutate(genero = if_else(is.na(genero), genero[which.max(n)], genero)) %>%
select(-n) %>%
ungroup()
muestra42 %>%
group_by(nombre) %>%
add_count(genero) %>%
mutate(genero = if_else(is.na(genero), genero[which.max(n)], genero)) %>%
select(-n) %>%
ungroup()
View(muestra42)
View(muestra42)
unique(muestra42$nombre)
muestra42 %>%
count(nombre) %>%
slice(which.max(n))
muestra42 %>%
count(nombre)
freqnombres<-muestra42 %>%
count(nombre)
muestra42 %>%
group_by(genero) %>%
add_count(nombre) %>%
mutate(genero = if_else(is.na(genero), genero[which.max(n)], genero)) %>%
select(-n) %>%
ungroup()
muestra42 %>%
group_by(nombre) %>%
add_count(nombre) %>%
mutate(genero = if_else(is.na(genero), genero[which.max(n)], genero)) %>%
select(-n) %>%
ungroup()
View(muestra42)
sinna<-na.omit(muestra42)
View(sinna)
muestra42$genero[muestra42$genero=='']<-NA
View(muestra42)
muestra42 %>%
group_by(nombre) %>%
add_count(nombre) %>%
mutate(genero = if_else(is.na(genero), genero[which.max(n)], genero)) %>%
select(-n) %>%
ungroup()
muestra42 %>%
group_by(nombre) %>%
add_count(genero) %>%
mutate(genero = if_else(is.na(genero), genero[which.max(n)], genero)) %>%
select(-n) %>%
ungroup()
View(muestra42)
sinna<-na.omit(muestra42)
View(sinna)
generos<-muestra42 %>%
mutate(genero_imp=paste(nombre,genero,sep = '_'))
View(generos)
freqnombres<-generos %>%
count(genero_imp)
View(freqnombres)
genero$genero_imp[genero$n_M>genero$n_V]="M"
generos$genero_imp[genero$n_M>generos$n_V]="M"
# Librerias ---------------------------------------------------------------
library(stringr)
# Carga de datos ----------------------------------------------------------
load('muestra42.RData')
# Mirar las dimensiones del fichero ---------------------------------------
dim(muestra42) # Los datos tienen 300685filas y 3 variables
# Cambiamos los nombres de las columnas -----------------------------------
colnames(muestra42)<-c('nif','nombre','genero') #Mediante colnames cambiamos los nombres de las columnas
# Crear variable nueva ----------------------------------------------------
muestra42
toupper(muestra42$nombre)
unique(muestra42$nombre)
library(tidyverse)
muestra42$genero[muestra42$genero=='']<-NA
left_join(generos,freqnombres,by=genero_imp)
muestra42$genero[muestra42$genero=='']<-NA
generos<-muestra42 %>%
mutate(genero_imp=paste(nombre,genero,sep = '_'))
freqnombres<-generos %>%
count(genero_imp)
left_join(generos,freqnombres,by=genero_imp)
View(freqnombres)
View(generos)
View(freqnombres)
generos$genero_imp[genero$n>generos$n]="M"
generos$genero_imp[generos$n>generos$n]="M"
generos$genero_imp[generos$n>generos$n]="V"
View(generos)
library(stringr)
# Carga de datos ----------------------------------------------------------
load('muestra42.RData')
# Mirar las dimensiones del fichero ---------------------------------------
dim(muestra42) # Los datos tienen 300685filas y 3 variables
# Cambiamos los nombres de las columnas -----------------------------------
colnames(muestra42)<-c('nif','nombre','genero') #Mediante colnames cambiamos los nombres de las columnas
# Crear variable nueva ----------------------------------------------------
muestra42
toupper(muestra42$nombre)
unique(muestra42$nombre)
library(tidyverse)
muestra42$genero[muestra42$genero=='']<-NA
sinna<-na.omit(muestra42)
generos<-muestra42 %>%
mutate(genero_imp=paste(nombre,genero,sep = '_'))
freqnombres<-generos %>%
count(genero_imp)
generos$genero[generos$n>generos$n]="M"
generos$genero[generos$n>generos$n]="V"
View(generos)
# Carga de datos ----------------------------------------------------------
load('muestra42.RData')
# Mirar las dimensiones del fichero ---------------------------------------
dim(muestra42) # Los datos tienen 300685filas y 3 variables
# Cambiamos los nombres de las columnas -----------------------------------
colnames(muestra42)<-c('nif','nombre','genero') #Mediante colnames cambiamos los nombres de las columnas
# nif ---------------------------------------------------------------------
cambio_nif <- "([[:digit:]]{8})([[:alpha:]]{1})"
# nif ---------------------------------------------------------------------
cambio <- "([[:digit:]]{8})([[:alpha:]]{1})"
grepl(pattern = cambio, x = muestra42$nif)
muestra<-grepl(pattern = cambio, x = muestra42$nif)
vector<-as.vector(which(muestra, arr.ind=FALSE))
muestra42<-muestra42[c(vector),]
